/*
 * This file is generated by jOOQ.
 */
package com.gemini.mis.entity.items.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "BOOK",
    schema = "ITEMS",
    uniqueConstraints = {
        @UniqueConstraint(name = "CONSTRAINT_1", columnNames = { "ID" })
    }
)
public class Book implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ID", nullable = false, precision = 7)
    private Integer Id;
    @Column(name = "AUTHOR_ID", nullable = false, precision = 7)
    private Integer AuthorId;
    @Column(name = "TITLE", nullable = false, length = 400)
    private String  Title;
    @Column(name = "PUBLISHED_IN", nullable = false, precision = 7)
    private Integer PublishedIn;
    @Column(name = "LANGUAGE_ID", nullable = false, precision = 7)
    private Integer LanguageId;

    public Book() {}

    public Book(Book value) {
        this.Id = value.Id;
        this.AuthorId = value.AuthorId;
        this.Title = value.Title;
        this.PublishedIn = value.PublishedIn;
        this.LanguageId = value.LanguageId;
    }

    @ConstructorProperties({ "Id", "AuthorId", "Title", "PublishedIn", "LanguageId" })
    public Book(
        Integer Id,
        Integer AuthorId,
        String  Title,
        Integer PublishedIn,
        Integer LanguageId
    ) {
        this.Id = Id;
        this.AuthorId = AuthorId;
        this.Title = Title;
        this.PublishedIn = PublishedIn;
        this.LanguageId = LanguageId;
    }

    /**
     * Getter for <code>ITEMS.BOOK.ID</code>.
     */
    public Integer getId() {
        return this.Id;
    }

    /**
     * Setter for <code>ITEMS.BOOK.ID</code>.
     */
    public void setId(Integer Id) {
        this.Id = Id;
    }

    /**
     * Getter for <code>ITEMS.BOOK.AUTHOR_ID</code>.
     */
    @NotNull
    public Integer getAuthorId() {
        return this.AuthorId;
    }

    /**
     * Setter for <code>ITEMS.BOOK.AUTHOR_ID</code>.
     */
    public void setAuthorId(Integer AuthorId) {
        this.AuthorId = AuthorId;
    }

    /**
     * Getter for <code>ITEMS.BOOK.TITLE</code>.
     */
    @NotNull
    @Size(max = 400)
    public String getTitle() {
        return this.Title;
    }

    /**
     * Setter for <code>ITEMS.BOOK.TITLE</code>.
     */
    public void setTitle(String Title) {
        this.Title = Title;
    }

    /**
     * Getter for <code>ITEMS.BOOK.PUBLISHED_IN</code>.
     */
    @NotNull
    public Integer getPublishedIn() {
        return this.PublishedIn;
    }

    /**
     * Setter for <code>ITEMS.BOOK.PUBLISHED_IN</code>.
     */
    public void setPublishedIn(Integer PublishedIn) {
        this.PublishedIn = PublishedIn;
    }

    /**
     * Getter for <code>ITEMS.BOOK.LANGUAGE_ID</code>.
     */
    @NotNull
    public Integer getLanguageId() {
        return this.LanguageId;
    }

    /**
     * Setter for <code>ITEMS.BOOK.LANGUAGE_ID</code>.
     */
    public void setLanguageId(Integer LanguageId) {
        this.LanguageId = LanguageId;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Book (");

        sb.append(Id);
        sb.append(", ").append(AuthorId);
        sb.append(", ").append(Title);
        sb.append(", ").append(PublishedIn);
        sb.append(", ").append(LanguageId);

        sb.append(")");
        return sb.toString();
    }
}
