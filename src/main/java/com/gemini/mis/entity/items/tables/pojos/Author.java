/*
 * This file is generated by jOOQ.
 */
package com.gemini.mis.entity.items.tables.pojos;


import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.LocalDate;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "AUTHOR",
    schema = "ITEMS",
    uniqueConstraints = {
        @UniqueConstraint(name = "CONSTRAINT_7", columnNames = { "ID" })
    }
)
public class Author implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ID", nullable = false, precision = 7)
    private Integer   Id;
    @Column(name = "FIRST_NAME", length = 50)
    private String    FirstName;
    @Column(name = "LAST_NAME", nullable = false, length = 50)
    private String    LastName;
    @Column(name = "DATE_OF_BIRTH", precision = 10)
    private LocalDate DateOfBirth;
    @Column(name = "YEAR_OF_BIRTH", precision = 7)
    private Integer   YearOfBirth;
    @Column(name = "DISTINGUISHED", precision = 1)
    private Byte      Distinguished;

    public Author() {}

    public Author(Author value) {
        this.Id = value.Id;
        this.FirstName = value.FirstName;
        this.LastName = value.LastName;
        this.DateOfBirth = value.DateOfBirth;
        this.YearOfBirth = value.YearOfBirth;
        this.Distinguished = value.Distinguished;
    }

    @ConstructorProperties({ "Id", "FirstName", "LastName", "DateOfBirth", "YearOfBirth", "Distinguished" })
    public Author(
        Integer   Id,
        String    FirstName,
        String    LastName,
        LocalDate DateOfBirth,
        Integer   YearOfBirth,
        Byte      Distinguished
    ) {
        this.Id = Id;
        this.FirstName = FirstName;
        this.LastName = LastName;
        this.DateOfBirth = DateOfBirth;
        this.YearOfBirth = YearOfBirth;
        this.Distinguished = Distinguished;
    }

    /**
     * Getter for <code>ITEMS.AUTHOR.ID</code>.
     */
    public Integer getId() {
        return this.Id;
    }

    /**
     * Setter for <code>ITEMS.AUTHOR.ID</code>.
     */
    public void setId(Integer Id) {
        this.Id = Id;
    }

    /**
     * Getter for <code>ITEMS.AUTHOR.FIRST_NAME</code>.
     */
    @Size(max = 50)
    public String getFirstName() {
        return this.FirstName;
    }

    /**
     * Setter for <code>ITEMS.AUTHOR.FIRST_NAME</code>.
     */
    public void setFirstName(String FirstName) {
        this.FirstName = FirstName;
    }

    /**
     * Getter for <code>ITEMS.AUTHOR.LAST_NAME</code>.
     */
    @NotNull
    @Size(max = 50)
    public String getLastName() {
        return this.LastName;
    }

    /**
     * Setter for <code>ITEMS.AUTHOR.LAST_NAME</code>.
     */
    public void setLastName(String LastName) {
        this.LastName = LastName;
    }

    /**
     * Getter for <code>ITEMS.AUTHOR.DATE_OF_BIRTH</code>.
     */
    public LocalDate getDateOfBirth() {
        return this.DateOfBirth;
    }

    /**
     * Setter for <code>ITEMS.AUTHOR.DATE_OF_BIRTH</code>.
     */
    public void setDateOfBirth(LocalDate DateOfBirth) {
        this.DateOfBirth = DateOfBirth;
    }

    /**
     * Getter for <code>ITEMS.AUTHOR.YEAR_OF_BIRTH</code>.
     */
    public Integer getYearOfBirth() {
        return this.YearOfBirth;
    }

    /**
     * Setter for <code>ITEMS.AUTHOR.YEAR_OF_BIRTH</code>.
     */
    public void setYearOfBirth(Integer YearOfBirth) {
        this.YearOfBirth = YearOfBirth;
    }

    /**
     * Getter for <code>ITEMS.AUTHOR.DISTINGUISHED</code>.
     */
    public Byte getDistinguished() {
        return this.Distinguished;
    }

    /**
     * Setter for <code>ITEMS.AUTHOR.DISTINGUISHED</code>.
     */
    public void setDistinguished(Byte Distinguished) {
        this.Distinguished = Distinguished;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Author (");

        sb.append(Id);
        sb.append(", ").append(FirstName);
        sb.append(", ").append(LastName);
        sb.append(", ").append(DateOfBirth);
        sb.append(", ").append(YearOfBirth);
        sb.append(", ").append(Distinguished);

        sb.append(")");
        return sb.toString();
    }
}
